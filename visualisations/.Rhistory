axis.text = element_blank(),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/5.5, fill = market_name), colour = "grey30", shape = 21, stroke = 1.25) + #market growth
scale_y_continuous(sec.axis = sec_axis(trans=~.*5.5)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0(as.character(my_y_axis), "$B|", as.character(my_y_axis_sec), "%"), color="grey60", size=3 , angle=0, fontface="bold", hjust=0.5) +
ylim(-20, 35) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-3,4), "cm")) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/5.5, fill = market_name), colour = "grey30", shape = 21, stroke = 1.25) + #market growth
scale_y_continuous(sec.axis = sec_axis(trans=~.*5.5)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0(as.character(my_y_axis), "$B|", as.character(my_y_axis_sec), "%"), color="grey60", size=3 , angle=0, fontface="bold", hjust=0.5) +
ylim(-20, 35) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/5.5, fill = market_name), colour = "grey30", shape = 21, stroke = 1.25) + #market growth
scale_y_continuous(sec.axis = sec_axis(trans=~.*5.5)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0(as.character(my_y_axis), "$B|", as.character(my_y_axis_sec), "%"), color="grey60", size=3 , angle=0, fontface="bold", hjust=0.5) +
ylim(-20, 35) +
theme_minimal() +
theme(
legend.position = "none",
axis.title = element_blank(),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/5.5, fill = market_name), colour = "grey30", shape = 21, stroke = 1.25) + #market growth
scale_y_continuous(sec.axis = sec_axis(trans=~.*5.5)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0(as.character(my_y_axis), "$B|", as.character(my_y_axis_sec), "%"), color="grey60", size=3 , angle=0, fontface="bold", hjust=0.5) +
ylim(-20, 35) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/5.5, fill = market_name), colour = "grey30", shape = 21, stroke = 1.25) + #market growth
scale_y_continuous(sec.axis = sec_axis(trans=~.*5.5)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0(as.character(my_y_axis), "$B|", as.character(my_y_axis_sec), "%"), color="grey60", size=3 , angle=0, fontface="bold", hjust=0.5) +
ylim(-20, 35) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey36", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_text(data = base_data, aes(x = title, y = 30, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
ggtitle(paste0("Top largest and fastest growing market segments and corresponding parent markets (segmented by ", my_segm_type2, ""))
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(treemap)
kable(head(data_top))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(treemap)
data_raw_Cyb <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_Cyb.xlsx")
data_raw_DSS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_DSS.xlsx")
data_raw_ICV <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_ICV.xlsx")
data_raw_RAS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_RAS.xlsx")
data_raw <- rbind(data_raw_Cyb, data_raw_DSS, data_raw_ICV, data_raw_RAS)
#calculate means across 3yr columns
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(grepl("robot", market_name, fixed = TRUE))
#filter segments to get top 20 in size and/or growth on each segment type
data_top <- data %>%
group_by(segmentation_type_2) %>%
filter(rank_size <= 20 | rank_growth <= 20)
#set labels for plot
data$label <- ifelse(data$rank_size <= 1 | data$rank_growth <= 1, paste0(data$market_name, ">", data$market_segment_name), "")
kable(head(data_top))
my_segm_type2 <- "application" #application, user, product
data_to_plot <- data.frame(filter(data_top, segmentation_type_2 == my_segm_type2))
data_to_plot$market_name <- gsub("Global", "", data_to_plot$market_name) #remove "global" from market names
data_to_plot$market_name <- gsub("Market", "", data_to_plot$market_name) #remove "Market" from market names
data_to_plot$market_name <- gsub("market", "", data_to_plot$market_name) #remove "market" from market names
data_to_plot$market_name <- as.factor(data_to_plot$market_name)
data_to_plot$mean_size <- data_to_plot$mean_size/1000 #make them $Billion rather than $Million
# Set a number of 'empty bar' to add at the end of each group (market), then rbind it to the data to plot
empty_bar <- 1
to_add <- data.frame(matrix(NA, empty_bar*nlevels(data_to_plot$market_name), ncol(data_to_plot)))
colnames(to_add) <- colnames(data_to_plot)
to_add$market_name <- rep(levels(data_to_plot$market_name), each=empty_bar)
data_to_plot <- rbind(data_to_plot, to_add)
data_to_plot <- data_to_plot %>% arrange(market_name)
data_to_plot$id <- seq(1, nrow(data_to_plot)) # add id
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
data <- data %>%
filter(grepl("robot", market_name, fixed = TRUE))
#calculate means across 3yr columns
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
View(data)
data <- data %>%
filter(str_detect(market_name, "robot"))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(treemap)
library(stringr)
data_raw_Cyb <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_Cyb.xlsx")
data_raw_DSS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_DSS.xlsx")
data_raw_ICV <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_ICV.xlsx")
data_raw_RAS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_RAS.xlsx")
data_raw <- rbind(data_raw_Cyb, data_raw_DSS, data_raw_ICV, data_raw_RAS)
#calculate means across 3yr columns
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "robot"))
#filter segments to get top 20 in size and/or growth on each segment type
data_top <- data %>%
group_by(segmentation_type_2) %>%
filter(rank_size <= 20 | rank_growth <= 20)
#set labels for plot
data$label <- ifelse(data$rank_size <= 1 | data$rank_growth <= 1, paste0(data$market_name, ">", data$market_segment_name), "")
kable(head(data_top))
my_segm_type2 <- "application" #application, user, product
data_to_plot <- data.frame(filter(data_top, segmentation_type_2 == my_segm_type2))
data_to_plot$market_name <- gsub("Global", "", data_to_plot$market_name) #remove "global" from market names
data_to_plot$market_name <- gsub("Market", "", data_to_plot$market_name) #remove "Market" from market names
data_to_plot$market_name <- gsub("market", "", data_to_plot$market_name) #remove "market" from market names
data_to_plot$market_name <- as.factor(data_to_plot$market_name)
data_to_plot$mean_size <- data_to_plot$mean_size/1000 #make them $Billion rather than $Million
# Set a number of 'empty bar' to add at the end of each group (market), then rbind it to the data to plot
empty_bar <- 1
to_add <- data.frame(matrix(NA, empty_bar*nlevels(data_to_plot$market_name), ncol(data_to_plot)))
colnames(to_add) <- colnames(data_to_plot)
to_add$market_name <- rep(levels(data_to_plot$market_name), each=empty_bar)
data_to_plot <- rbind(data_to_plot, to_add)
data_to_plot <- data_to_plot %>% arrange(market_name)
data_to_plot$id <- seq(1, nrow(data_to_plot)) # add id
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "robot"))
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
data <- data %>%
filter(str_detect(get(market_name), "robot"))
data <- data %>%
filter(str_detect(market_name, "r"))
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "ro"))
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "rob"))
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
View(data)
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
View(data)
#filter segments to get top 20 in size and/or growth on each segment type
data_top <- data %>%
group_by(segmentation_type_2) %>%
filter(rank_size <= 20 & rank_growth <= 20)
View(data_top)
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
#filter segments to get top 20 in size and/or growth on each segment type
data_top <- data %>%
group_by(segmentation_type_2) %>%
filter(rank_size <= 50 & rank_growth <= 50)
View(data_top)
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_size = dplyr::dense_rank(desc(mean_size)), rank_growth = dplyr::dense_rank(desc(mean_growth))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
data <- data %>%
group_by(market_name) %>%
mutate(no_segments = n())
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
#count markets' segments:
data <- data %>%
group_by(market_name) %>%
mutate(no_segments = n())
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_no_segments = dplyr::dense_rank(desc(no_segments))) #dense rank sets same rank to ties, and leaves no gap for the following rank
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
#count markets' segments:
data <- data %>%
group_by(market_name) %>%
mutate(no_segments = n())
#compute ranks
data <- data %>%
group_by(segmentation_type_2) %>%
mutate(rank_no_segments = dplyr::dense_rank(desc(no_segments))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#filter markets to get top 10 in no. segments
data_top <- data %>%
group_by(segmentation_type_2) %>%
filter(rank_no_segments <= 5)
#set labels for plot
data$label <- ifelse(data$rank_size <= 1 | data$rank_growth <= 1, paste0(data$market_name, ">", data$market_segment_name), "")
#set labels for plot
data$label <- paste0(data$market_name, ">", data$market_segment_name)
View(data)
#calculate means across 3yr columns
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
#leave only segmentation by application:
data <- data %>%
filter(segmentation_type_2 == "application")
#count markets' segments:
data <- data %>%
group_by(market_name) %>%
mutate(no_segments = n())
nchar(data[73,2])
data[73,2]
View(data)
data[49,2]
nchar(data[49,2])
View(label_data)
View(data_top)
View(data_to_plot)
View(base_data)
rep(max(data_to_plot$id),4)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(treemap)
library(stringr)
data_raw_Cyb <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_Cyb.xlsx")
data_raw_DSS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_DSS.xlsx")
data_raw_ICV <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_ICV.xlsx")
data_raw_RAS <- read_excel("~/OneDrive - The University of Queensland/03 CSIRO CPS Strategic Opportunities/05 Data/Phase 2/Technavio Reports/Technavio market data - R ready/market_segments_RAS.xlsx")
data_raw <- rbind(data_raw_Cyb, data_raw_DSS, data_raw_ICV, data_raw_RAS)
#calculate means across 3yr columns
data <- data_raw %>%
mutate(mean_size = rowMeans(select(., starts_with("size_million_")), na.rm = T), mean_growth = rowMeans(select(., starts_with("yoy_growth_perc_")), na.rm = T))
data <- data[,c(1,2,4,11,12)]
#leave only robot markets:
data <- data %>%
filter(str_detect(market_name, "Robot"))
#leave only segmentation by application:
data <- data %>%
filter(segmentation_type_2 == "application")
#count markets' segments:
data <- data %>%
group_by(market_name) %>%
mutate(no_segments = n())
# #compute ranks
# data <- data %>%
#   group_by(segmentation_type_2) %>%
#   mutate(rank_no_segments = dplyr::dense_rank(desc(no_segments))) #dense rank sets same rank to ties, and leaves no gap for the following rank
#filter markets to get those with 4 segments or more:
data <- data %>%
filter(no_segments >= 5)
#set labels for plot
#data$label <- paste0(data$market_name, ">", data$market_segment_name)
data$market_segment_name <- ifelse(nchar(data$market_segment_name) <= 25, data$market_segment_name, paste0(substr(data$market_segment_name,1,25), "..."))
data$market_name <- str_wrap(data$market_name, width = 15)
kable(head(data))
data_to_plot <- data.frame(data)
data_to_plot$market_name <- gsub("Global", "", data_to_plot$market_name) #remove "global" from market names
data_to_plot$market_name <- gsub("Market", "", data_to_plot$market_name) #remove "Market" from market names
data_to_plot$market_name <- gsub("market", "", data_to_plot$market_name) #remove "market" from market names
data_to_plot$market_name <- as.factor(data_to_plot$market_name)
data_to_plot$mean_size <- data_to_plot$mean_size/1000 #make them $Billion rather than $Million
# Set a number of 'empty bar' to add at the end of each group (market), then rbind it to the data to plot
empty_bar <- 1
to_add <- data.frame(matrix(NA, empty_bar*nlevels(data_to_plot$market_name), ncol(data_to_plot)))
colnames(to_add) <- colnames(data_to_plot)
to_add$market_name <- rep(levels(data_to_plot$market_name), each=empty_bar)
data_to_plot <- rbind(data_to_plot, to_add)
data_to_plot <- data_to_plot %>% arrange(market_name)
data_to_plot$id <- seq(1, nrow(data_to_plot)) # add id
# data frame with thw name and the y position of each label
label_data <- data_to_plot
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) / number_of_bar # Substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse(angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
# data frame with additional info to plot group (parent markets) labels
base_data <- data_to_plot %>%
group_by(market_name) %>%
summarize(start = min(id), end = max(id) - empty_bar) %>%
rowwise() %>%
mutate(title = mean(c(start, end)))
# vectors with 4 breaks of the y axis for size and growth (to plot horizontal/circular lines)
my_y_axis <- c(max(data_to_plot$mean_size, na.rm = T)/4*1, max(data_to_plot$mean_size, na.rm = T)/4*2, max(data_to_plot$mean_size, na.rm = T)/4*3, max(data_to_plot$mean_size, na.rm = T)/4*4)
my_y_axis <- round(my_y_axis)
my_y_axis_sec <- c(max(data_to_plot$mean_growth, na.rm = T)/4*1, max(data_to_plot$mean_growth, na.rm = T)/4*2, max(data_to_plot$mean_growth, na.rm = T)/4*3, max(data_to_plot$mean_growth, na.rm = T)/4*4)
my_y_axis_sec <- round(my_y_axis_sec)
data_to_plot$max_size <- ifelse(!is.na(data_to_plot$market_segment_name), max(data_to_plot$mean_size, na.rm = T), NA)
ggplot(data_to_plot, aes(x = as.factor(id), y = mean_size, fill = market_name)) +
geom_hline(yintercept = my_y_axis[4], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[3], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[2], colour = "grey", size = .15) +
geom_hline(yintercept = my_y_axis[1], colour = "grey", size = .15) +
geom_hline(yintercept = 0, colour = "grey", size = .15) +
#geom_bar(aes(x = as.factor(id), y = max_size), fill = "white", colour = "white", stat = "identity") + #dummy bars in white to cut through the axis lines
geom_bar(aes(x = as.factor(id), y = mean_size, fill = market_name), stat = "identity") + #market size
geom_point(aes(x = as.factor(id), y = mean_growth/30, fill = market_name), colour = "grey30", shape = 21, size = 2, stroke = .75) + #market growth
scale_y_continuous(limits = c(0,10), sec.axis = sec_axis(trans = ~.*30)) +
annotate("text", x = rep(max(data_to_plot$id),4), y = my_y_axis, label = paste0("$", as.character(my_y_axis), "B|", as.character(my_y_axis_sec), "%"), color="grey55", size = 2.5 , angle = 0, fontface="bold", hjust=0.5) +
ylim(-5, 5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid = element_blank()) +
coord_polar() +
geom_text(data = label_data, aes(x = id, y = 0.1, label = market_segment_name, hjust = hjust), color = "grey25", fontface = "bold", size = 2.75, angle = label_data$angle, inherit.aes = F) + #market segment labels
geom_segment(data=base_data, aes(x = start, y = -0.25, xend = end, yend = -.25), colour = "black", alpha=0.8, size=0.7 , inherit.aes = FALSE )  +
geom_text(data = base_data, aes(x = title, y = -1.3, label = market_name, colour = market_name), size = 3.25, fontface = "bold", inherit.aes = F) + #market label
geom_text(x = 0, y = 5, label = "Top largest and fastest growing market segments for robotics products and services", size = 6) + #title
geom_text(x = 0, y = 4.25, label = "Average for 2020-22 period. Bars represent market size in US$ Billion. Dots represent year-over-year percentage growth", size = 3.75) #subtitle
View(data_to_plot)
rep(max(data_to_plot$id),4)
my_y_axis
my_y_axis_sec
c(max(data_to_plot$mean_size, na.rm = T)/4*1, max(data_to_plot$mean_size, na.rm = T)/4*2, max(data_to_plot$mean_size, na.rm = T)/4*3, max(data_to_plot$mean_size, na.rm = T)/4*4)
data_vis <- data %>%
group_by(market_name) %>%
summarise(`number of segments` = max(no_segments), `total size (all segments, $B)` = sum(mean_size), `average growth rate (all segments, YoY%` = mean(mean_growth))
View(data_vis)
data_vis <- data %>%
group_by(market_name) %>%
summarise(`number of segments` = max(no_segments), `total size ($B)` = round(sum(mean_size), 2), `average growth rate (YoY%)` = round(mean(mean_growth), 2))
View(data_vis)
View(data_raw)
colnames(data_vis)[1] <- `market name`
colnames(data_vis)[1] <- "market name"
str(data_vis)
str(data_vis)
data_vis <- data.frame(data_vis)
str(data_vis)
